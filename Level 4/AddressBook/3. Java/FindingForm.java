/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package addressbook;

import com.sun.glass.events.WindowEvent;
import javax.swing.table.DefaultTableModel;
import java.util.EventObject;

/**
 *
 * @author kch79
 */
public class FindingForm extends javax.swing.JFrame {
    private UpdatingForm updatingForm;
    private int[] indexes;
    /**
     * Creates new form FindingForm
     * @param updatingForm
     */
    public FindingForm(UpdatingForm updatingForm) {
        //1. 찾기 윈도우가 생성될 때
        initComponents();
        //주소록 윈도우 연결 가능
        this.indexes=null;
        this.updatingForm=updatingForm;
        //1.1. 리스트뷰 컨트롤의 헤더를 만든다.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        IDC_LIST_PERSONALS = new javax.swing.JTable();
        IDC_STATIC_PERSONAL = new javax.swing.JPanel();
        IDC_EDIT_NAME = new javax.swing.JTextField();
        IDC_STATIC_NAME = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        IDC_BUTTON_FIND = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("찾기");

        IDC_LIST_PERSONALS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "번호", "성명", "주소", "전화번호", "이메일주소"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        IDC_LIST_PERSONALS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IDC_LIST_PERSONALSMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(IDC_LIST_PERSONALS);

        IDC_STATIC_PERSONAL.setToolTipText("개인");

        IDC_EDIT_NAME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDC_EDIT_NAMEActionPerformed(evt);
            }
        });

        IDC_STATIC_NAME.setText("성         명");

        jLabel5.setText("개인");

        javax.swing.GroupLayout IDC_STATIC_PERSONALLayout = new javax.swing.GroupLayout(IDC_STATIC_PERSONAL);
        IDC_STATIC_PERSONAL.setLayout(IDC_STATIC_PERSONALLayout);
        IDC_STATIC_PERSONALLayout.setHorizontalGroup(
            IDC_STATIC_PERSONALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDC_STATIC_PERSONALLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(IDC_STATIC_NAME)
                .addGap(66, 66, 66)
                .addComponent(IDC_EDIT_NAME, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jLabel5)
        );
        IDC_STATIC_PERSONALLayout.setVerticalGroup(
            IDC_STATIC_PERSONALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IDC_STATIC_PERSONALLayout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(16, 16, 16)
                .addGroup(IDC_STATIC_PERSONALLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IDC_STATIC_NAME)
                    .addComponent(IDC_EDIT_NAME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        IDC_BUTTON_FIND.setText("찾      기");
        IDC_BUTTON_FIND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDC_BUTTON_FINDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IDC_STATIC_PERSONAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(IDC_BUTTON_FIND))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(IDC_STATIC_PERSONAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDC_BUTTON_FIND))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDC_LIST_PERSONALSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IDC_LIST_PERSONALSMouseClicked
        // TODO add your handling code here:
        //3. 리스트뷰 컨트롤의 항목을 클릭했을 때
        //3.1. 리스트뷰 컨트롤의 선택된 항목의 위치를 읽는다.
        int index=IDC_LIST_PERSONALS.getSelectedRow();
        //3.2. 선택된 항목을 읽는다.
        String name=(String)IDC_LIST_PERSONALS.getValueAt(index, 1);
        String address=(String)IDC_LIST_PERSONALS.getValueAt(index, 2);
        String telephoneNumber=(String)IDC_LIST_PERSONALS.getValueAt(index, 3);
        String emailAddress=(String)IDC_LIST_PERSONALS.getValueAt(index, 4);
        //3.3. 주소록 윈도우를 찾는다.
        //3.4. 주소록 윈도우의 개인에 출력한다.
        this.updatingForm.IDC_EDIT_NAME.setText(name);
        this.updatingForm.IDC_EDIT_ADDRESS.setText(address);
        this.updatingForm.IDC_EDIT_TELEPHONENUMBER.setText(telephoneNumber);
        this.updatingForm.IDC_EDIT_EMAILADDRESS.setText(emailAddress);
        //3.5. 주소록 윈도우의 리스트뷰 컨트롤의 항목을 선택한다.
        this.updatingForm.IDC_LIST_PERSONALS.setRowSelectionInterval(indexes[index], indexes[index]);
        //3.6. 찾기 윈도우를 닫는다.
        this.dispose();
    }//GEN-LAST:event_IDC_LIST_PERSONALSMouseClicked
        
    private void IDC_BUTTON_FINDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDC_BUTTON_FINDActionPerformed
        // TODO add your handling code here:
        //2. 찾기 버튼을 클릭했을 때
        //2.1. 성명을 읽는다.
        String name=IDC_EDIT_NAME.getText();
        //2.2. 주소록 윈도우를 찾는다.
        //2.3. 주소록 윈도우의 주소록에서 찾다.
        this.indexes=this.updatingForm.addressBook.Find(name);
        //2.4. 리스트뷰 컨트롤의 모든 항목을 지우다.
        DefaultTableModel model=(DefaultTableModel)IDC_LIST_PERSONALS.getModel();
        model.setNumRows(0);
        //2.5. 리스트뷰 컨트롤에 찾은 수만큼 항목을 추가하다.
        Personal personal;
        String number;
        int i=0;
        while(i<this.indexes.length){
            number=Integer.toString(i+1);
            personal=this.updatingForm.addressBook.GetAt(this.indexes[i]);
            model.addRow(new Object[]{number, personal.GetName(), personal.GetAddress(), personal.GetTelephoneNumber(), personal.GetEmailAddress()});
            i++;
        }
    }//GEN-LAST:event_IDC_BUTTON_FINDActionPerformed

    private void IDC_EDIT_NAMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDC_EDIT_NAMEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDC_EDIT_NAMEActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton IDC_BUTTON_FIND;
    private javax.swing.JTextField IDC_EDIT_NAME;
    private javax.swing.JTable IDC_LIST_PERSONALS;
    private javax.swing.JLabel IDC_STATIC_NAME;
    private javax.swing.JPanel IDC_STATIC_PERSONAL;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
